(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{1188:function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(1187)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function createTranslatorFactory($){"use strict";return function TranslatorFactory(labels,mappings){var defaulSettigns_translationLabels={"error.type.key_invalid":"Invalid translation key: '{0}'","translator.error.namespace_not_found":"Invalid namespace key: '{0}'"},defaulSettigns_namespaceMappings={translator:{translationKeyInvalid:"error.type.key_invalid",namespaceMappingNotFound:"translator.error.namespace_not_found"}},translationLabels={},namespaceMappings={};function setTranslationLabels(newTranslationLabels){translationLabels=$.extend({},defaulSettigns_translationLabels,newTranslationLabels)}function setNamespaceMappings(newNamespaceMappings){namespaceMappings=$.extend(!0,{},defaulSettigns_namespaceMappings,newNamespaceMappings)}function _translate(key){var s=translationLabels[key];if(arguments.length>1)for(var i=0;i<arguments.length-1;i++){var reg=new RegExp("\\{"+i+"\\}","gm");s=s.replace(reg,arguments[i+1])}return s}return setTranslationLabels(labels),setNamespaceMappings(mappings),{setTranslationLabels:setTranslationLabels,setNamespaceMappings:setNamespaceMappings,createTranslator:function(namespace){return{getKeys:function(){return $.extend({},function getNamespaceMapping(namespace){if(!namespace){for(var keys=Object.keys(translationLabels),retVal={},i=0;i<keys.length;i++)retVal[keys[i]]=keys[i];return retVal}if(namespaceMappings[namespace])return namespaceMappings[namespace];throw new TypeError(_translate(namespaceMappings.translator.namespaceMappingNotFound,namespace))}(namespace))},translate:function(key){if(Array.isArray(arguments[1])){var parameters=[key];return parameters.push.apply(parameters,arguments[1]),this.translate.apply(this,parameters)}if(translationLabels[key])return _translate.apply(this,arguments);throw new TypeError(_translate(namespaceMappings.translator.translationKeyInvalid))}}}}}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)},1189:function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__(1187),__webpack_require__(1188)],void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function TranslatorLoader($,createTranslatorFactory){"use strict";var conf,fallbackTranslation={"notifications.save-title":"Content saved","notifications.save-went-wrong":"Something went wrong","notifications.no-changes-title":"No changes made","notifications.no-changes-description":"There are currently no changes made to the content on the page!","notifications.remove-all-changes":"Are you sure you want to remove all unsaved changes?","notifications.unsaved-changes":"You have some unsaved changes. They will disappear if you navigate away!","notifications.delete-content-element":"Are you sure you want to delete the content element?","notifications.change_site_root":"You are going to switch to another site. Are you sure ?","notifications.save-pages-title":"Page saved","notifications.request.configuration.fail":'Could not fetch editor configurations due to a request error. ({0}, "{1}")',"title.navigate":"Navigate","button.discard_navigate":"Discard and Navigate","button.save":"Save All","button.cancel":"Cancel","button.okay":"OK","error.type.undefined":"'{0}' is undefined\"","error.type.not_function":"'{0}' is not a function","error.type.not_integer":"'{0}' is not a integer","error.type.key_invalid":"Invalid translation key: '{0}'","translator.error.namespace_not_found":"Invalid namespace key: '{0}'"},defaultNamespaceMapping={translator:{translationKeyInvalid:"error.type.key_invalid",namespaceMappingNotFound:"translator.error.namespace_not_found"},modal:{titleNavigate:"title.navigate",discardLabel:"button.discard_navigate",saveLabel:"button.save",cancelLabel:"button.cancel",okayLabel:"button.okay",variableNotDefined:"error.type.undefined",variableNotFunction:"error.type.not_function",variableNotInteger:"error.type.not_integer"},frontendEditing:{confirmNavigateWithChange:"notifications.unsaved-changes"},editor:{confirmOpenModalWithChange:"notifications.unsaved-changes",confirmDeleteContentElement:"notifications.delete-content-element",informRequestFailed:"notifications.request.configuration.fail"},gui:{updatedContentTitle:"notifications.save-title",updatedPageTitle:"notifications.save-pages-title",updateRequestErrorTitle:"notifications.save-went-wrong",saveWithoutChange:"notifications.no-changes-description",saveWithoutChangeTitle:"notifications.no-changes-title",confirmDiscardChanges:"notifications.remove-all-changes",confirmChangeSiteRoot:"notifications.change_site_root",confirmChangeSiteRootWithChange:"notifications.unsaved-changes"}},translationLabels=$.extend({},fallbackTranslation),namespaceMapping=$.extend({},defaultNamespaceMapping),translatorFactory=createTranslatorFactory(translationLabels,namespaceMapping),namespacesContext={};function getNamespacesContext(namespace){var namespaceKey=namespace||"GLOBAL";return namespacesContext[namespaceKey]||(namespacesContext[namespaceKey]={configureCallbacks:[],translator:translatorFactory.createTranslator(namespace)}),namespacesContext[namespaceKey]}function registerConfigureCallback(context,configureCallback){var index=-1;return configureCallback&&(index=context.length,context.configureCallbacks.push(configureCallback),triggerConfigureCallback(configureCallback,context.translator,!0)),function unregister(){index>=0&&index<context.length&&(context.configureCallbacks[index]=null)}}function triggerConfigureCallback(configureCallback,translator,initial){"function"==typeof configureCallback&&configureCallback(translator,!0===initial)}return{mergeStrategy:{none:1,merge:2,mergeDeep:6,override:8},configure:function(newConfiguration,mergeStrategy){if((mergeStrategy=this.mergeStrategy[mergeStrategy])||(mergeStrategy=this.mergeStrategy.none),!conf||mergeStrategy>this.mergeStrategy.none){if(0!=(mergeStrategy&this.mergeStrategy.merge)){var mergeDeep=mergeStrategy===this.mergeStrategy.mergeDeep;newConfiguration.translationLabels=$.extend(mergeDeep,{},conf.translationLabels,newConfiguration.translationLabels),newConfiguration.namespaceMapping=$.extend(mergeDeep,{},conf.namespaceMapping,newConfiguration.namespaceMapping)}return function compareObjects(obj1,obj2){var type1=typeof obj1;if(type1!==typeof obj2)return!1;if(Array.isArray(obj1)){if(obj1.length!==obj2.length)return!1;for(var x=0;x<obj1.length;x++){for(var found=!1,y=0;y<obj2.length;y++)if(compareObjects(obj1[x],obj2[y])){found=!0;break}if(!found)return!1}}else{if("object"!==type1)return obj1===obj2;var keys1=Object.keys(obj1),keys2=Object.keys(obj2);if(keys1.length!==keys2.length)return!1;for(var i=0;i<keys1.length;i++)if(!compareObjects(obj1[keys1[i]],obj2[keys1[i]]))return!1}return!0}(conf,newConfiguration)||(!function configure(newConfiguration){conf=newConfiguration,translationLabels=$.extend({},fallbackTranslation,conf&&conf.translationLabels?conf.translationLabels:{}),translatorFactory.setTranslationLabels(translationLabels),namespaceMapping=$.extend(!0,{},defaultNamespaceMapping,conf&&conf.namespaceMapping?conf.namespaceMapping:{}),translatorFactory.setNamespaceMappings(namespaceMapping)}(newConfiguration),function triggerConfigureCallbacks(){for(var namespaces=Object.keys(namespacesContext),x=0;x<namespaces.length;x++)for(var namespace=namespaces[x],context=namespacesContext[namespace],y=0;y<context.configureCallbacks.length;y++)triggerConfigureCallback(context.configureCallbacks[y],context.translator)}()),!0}return!1},useTranslator:function(namespace,configureCallback){var context=getNamespacesContext(namespace);return{translator:context.translator,unregister:registerConfigureCallback(context,configureCallback)}},getTranslator:function(namespace){return getNamespacesContext(namespace).translator}}}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}}]);
//# sourceMappingURL=1.0994c942c1737798463d.bundle.js.map